class Solution {
public:
    int compress(vector<char>& chars) {
        int n = 1, len = 1;
        int j = 1;
        char temp = chars[0];
        for(int i = 1; i < chars.size(); i++)
        {
            if(chars[i] == temp)
                n++;
            if(chars[i] != temp && n > 1)
            {
                if(n >= 10)
                {
                    chars[j] = n / 10 + '0';
                    n %= 10;
                    j++;
                    len++;
                    chars[j] = n + '0';
                    j++;
                    len++;
                }
                else if(n < 10)
                {
                    chars[j] = n + '0';
                    j++;
                    len++;
                }
                n = 1;
                temp = chars[i];
                chars[j] = temp;
                j++;
                len++;
            }
            else if(chars[i] != temp && n == 1)
            {
                temp = chars[i];
                chars[j] = temp;
                j++;
                len++;
            }
            else if(i == chars.size() - 1 && n > 1)
            {
                if(n >= 10)
                {
                    chars[j] = n / 10 + '0';
                    len++;
                    j++;
                    n %= 10;
                    chars[j] = n + '0';
                    len++;
                    j++;
                }
                else if(n < 10)
                {
                    chars[j] = n + '0';
                    j++;
                    len++;
                }
            }
        }
        return len;
    }
};