void change(stack<int> *s1, stack<int> *s2)
{
    int k = s2->size();
    for(int i = 0; i < k; i++)
    {
        s1->push(s2->top());
        s2->pop();
    }
}
class MyQueue {
public:
    /** Initialize your data structure here. */
    MyQueue() {
        obj = new stack<int>;
    }
    
    /** Push element x to the back of queue. */
    void push(int x) {
        obj->push(x);
    }
    
    /** Removes the element from in front of queue and returns that element. */
    int pop() {
        stack<int>*temp = new stack<int>;
        change(temp, obj);
        int res = temp->top();
        temp->pop();
        change(obj, temp);
        return res;
    }
    
    /** Get the front element. */
    int peek() {
        stack<int>*temp = new stack<int>;
        change(temp, obj);
        int res = temp->top();
        change(obj, temp);
        return res;
    }
    
    /** Returns whether the queue is empty. */
    bool empty() {
        if (obj->empty())
            return true;
        else
            return false;
    }
    private:
     stack<int> *obj;
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */