class Solution {
public:
    int check(int mx, int t)
    {
        int c;
        while(mx > 0)
        {
            c = t % mx;
            t = mx;
            mx = c;
        }
        return t;
    }
    bool hasGroupsSizeX(vector<int>& deck) {
        if(deck.size() <= 1)
            return false;
        map<int, int>mp;
        map<int, int>::iterator it;
        vector<int>v;
        for(int i = 0; i < deck.size(); i++)
        {
            if(!mp.count(deck[i]))
                mp.insert(make_pair(deck[i], 1));
            else
                mp[deck[i]]++;
        }
        for(it = mp.begin(); it != mp.end(); it++)
            v.push_back(it->second);
        sort(v.begin(), v.end());

        for(int i = 1; i < v.size(); i++)
        {
            int res = check(v[0], v[i]);
            if(res == 1)
                return false;
        }
        return true;
    }
};